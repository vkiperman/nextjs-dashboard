{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_344b1c37.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_344b1c37-module__itG8Hq__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_344b1c37.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/lusitana_e875e951.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"lusitana_e875e951-module__ClJWnG__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/lusitana_e875e951.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22fonts.ts%22,%22import%22:%22Lusitana%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:[%22400%22,%22700%22]}],%22variableName%22:%22lusitana%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Lusitana', 'Lusitana Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/dev/nextjs-dashboard/app/ui/button.tsx"],"sourcesContent":["import clsx from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n}\n\nexport function Button({ children, className, ...rest }: ButtonProps) {\n  return (\n    <button\n      {...rest}\n      className={clsx(\n        'flex h-10 items-center rounded-lg bg-blue-500 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-blue-600 aria-disabled:cursor-not-allowed aria-disabled:opacity-50',\n        className,\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,SAAS,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAmB;IAClE,qBACE,6XAAC;QACE,GAAG,IAAI;QACR,WAAW,CAAA,GAAA,sLAAA,CAAA,UAAI,AAAD,EACZ,kTACA;kBAGD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/dev/nextjs-dashboard/app/lib/actions.tsx"],"sourcesContent":["'use server';\n\nimport postgres from 'postgres';\nimport { AuthError } from 'next-auth';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\nimport { signIn } from '@/auth';\nimport { z } from 'zod';\n\nexport async function authenticate(\n  prevState: string | undefined,\n  formData: FormData,\n) {\n  try {\n    await signIn('credentials', formData);\n  } catch (error) {\n    if (error instanceof AuthError) {\n      switch (error.type) {\n        case 'CredentialsSignin':\n          return 'Invalid credentials.';\n        default:\n          return 'Something went wrong.';\n      }\n    }\n    throw error;\n  }\n}\n \nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n \nconst FormSchema = z.object({\n  id: z.string(),\n  customerId: z.string({\n    invalid_type_error: 'Please select a customer.',\n  }),\n  amount: z.coerce\n    .number()\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\n  status: z.enum(['pending', 'paid'], {\n    invalid_type_error: 'Please select an invoice status.',\n  }),\n  date: z.string(),\n});\n \nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\nexport type State = {\n  errors?: {\n    customerId?: string[];\n    amount?: string[];\n    status?: string[];\n  };\n  message?: string | null;\n};\nexport async function createInvoice(prevState: State, formData: FormData) {\n  // Validate form using Zod\n  const { success, error, data } = CreateInvoice.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n \n  // If form validation fails, return errors early. Otherwise, continue.\n  if (!success) {\n    return {\n      errors: error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Create Invoice.',\n    };\n  }\n \n  // Prepare data for insertion into the database\n  const { customerId, amount, status } = data;\n  const amountInCents = amount * 100;\n  const date = new Date().toISOString().split('T')[0];\n \n  // Insert data into the database\n  try {\n    await sql`\n      INSERT INTO invoices (customer_id, amount, status, date)\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n  } catch (error) {\n    // If a database error occurs, return a more specific error.\n    return {\n      message: `Database Error: Failed to Create Invoice. ${error}`,\n    };\n  }\n \n  // Revalidate the cache for the invoices page and redirect the user.\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport async function updateInvoice(id: string, formData: FormData) {\n  const { customerId, amount, status } = UpdateInvoice.parse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n \n  const amountInCents = amount * 100;\n \n  try {\n    await sql`\n      UPDATE invoices\n      SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n      WHERE id = ${id}\n    `;\n  } catch (error) { \n    console.error(error)\n  }\n \n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nexport async function deleteInvoice(id: string) {\n    throw new Error('Failed to Delete Invoice');\n\n  // try {\n  //   await sql`DELETE FROM invoices WHERE id = ${id}`;\n  // } catch (error) {\n  //   console.log(error)\n  // }\n  // revalidatePath('/dashboard/invoices');\n}"],"names":[],"mappings":";;;;;;IASsB,eAAA,WAAA,GAAA,CAAA,GAAA,qWAAA,CAAA,wBAAA,EAAA,8CAAA,qWAAA,CAAA,aAAA,EAAA,KAAA,GAAA,qWAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/dev/nextjs-dashboard/app/ui/login-form.tsx"],"sourcesContent":["'use client'\n\nimport { lusitana } from '@/app/ui/fonts';\nimport {\n  AtSymbolIcon,\n  KeyIcon,\n  ExclamationCircleIcon,\n} from '@heroicons/react/24/outline';\nimport { ArrowRightIcon } from '@heroicons/react/20/solid';\nimport { Button } from './button';\nimport { useSearchParams } from 'next/navigation';\nimport { useActionState } from 'react';\nimport { authenticate } from '../lib/actions';\n\nexport default function LoginForm() {\n  const searchParams = useSearchParams();\n  const callbackUrl = searchParams.get('callbackUrl') || '/dashboard';\n  const [errorMessage, formAction, isPending] = useActionState(\n    authenticate,\n    undefined,\n  );\n  \n  return (\n    <form action={formAction} className=\"space-y-3\">\n      <div className=\"flex-1 rounded-lg bg-gray-50 px-6 pb-4 pt-8\">\n        <h1 className={`${lusitana.className} mb-3 text-2xl`}>\n          Please log in to continue.\n        </h1>\n        <div className=\"w-full\">\n          <div>\n            <label\n              className=\"mb-3 mt-5 block text-xs font-medium text-gray-900\"\n              htmlFor=\"email\"\n            >\n              Email\n            </label>\n            <div className=\"relative\">\n              <input\n                className=\"peer block w-full rounded-md border border-gray-200 py-[9px] pl-10 text-sm outline-2 placeholder:text-gray-500\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email address\"\n                required\n              />\n              <AtSymbolIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900\" />\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            <label\n              className=\"mb-3 mt-5 block text-xs font-medium text-gray-900\"\n              htmlFor=\"password\"\n            >\n              Password\n            </label>\n            <div className=\"relative\">\n              <input\n                className=\"peer block w-full rounded-md border border-gray-200 py-[9px] pl-10 text-sm outline-2 placeholder:text-gray-500\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                required\n                minLength={6}\n              />\n              <KeyIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900\" />\n            </div>\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"redirectTo\" value={callbackUrl} />\n        <Button className=\"mt-4 w-full\" aria-disabled={isPending}>\n          Log in <ArrowRightIcon className=\"ml-auto h-5 w-5 text-gray-50\" />\n        </Button>\n        <div className=\"flex h-8 items-end space-x-1\">\n           {errorMessage && (\n            <>\n              <ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" />\n              <p className=\"text-sm text-red-500\">{errorMessage}</p>\n            </>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;AAce,SAAS;IACtB,MAAM,eAAe,CAAA,GAAA,iRAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,cAAc,aAAa,GAAG,CAAC,kBAAkB;IACvD,MAAM,CAAC,cAAc,YAAY,UAAU,GAAG,CAAA,GAAA,oVAAA,CAAA,iBAAc,AAAD,EACzD,kJAAA,CAAA,eAAY,EACZ;IAGF,qBACE,6XAAC;QAAK,QAAQ;QAAY,WAAU;kBAClC,cAAA,6XAAC;YAAI,WAAU;;8BACb,6XAAC;oBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,cAAc,CAAC;8BAAE;;;;;;8BAGtD,6XAAC;oBAAI,WAAU;;sCACb,6XAAC;;8CACC,6XAAC;oCACC,WAAU;oCACV,SAAQ;8CACT;;;;;;8CAGD,6XAAC;oCAAI,WAAU;;sDACb,6XAAC;4CACC,WAAU;4CACV,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,aAAY;4CACZ,QAAQ;;;;;;sDAEV,6XAAC,8SAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;;;;;;;;;;;;;sCAG5B,6XAAC;4BAAI,WAAU;;8CACb,6XAAC;oCACC,WAAU;oCACV,SAAQ;8CACT;;;;;;8CAGD,6XAAC;oCAAI,WAAU;;sDACb,6XAAC;4CACC,WAAU;4CACV,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,aAAY;4CACZ,QAAQ;4CACR,WAAW;;;;;;sDAEb,6XAAC,oSAAA,CAAA,UAAO;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;8BAIzB,6XAAC;oBAAM,MAAK;oBAAS,MAAK;oBAAa,OAAO;;;;;;8BAC9C,6XAAC,oHAAA,CAAA,SAAM;oBAAC,WAAU;oBAAc,iBAAe;;wBAAW;sCACjD,6XAAC,gTAAA,CAAA,iBAAc;4BAAC,WAAU;;;;;;;;;;;;8BAEnC,6XAAC;oBAAI,WAAU;8BACX,8BACA;;0CACE,6XAAC,gUAAA,CAAA,wBAAqB;gCAAC,WAAU;;;;;;0CACjC,6XAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;;;AAOnD","debugId":null}}]
}